{"ast":null,"code":"import React,{useState}from\"react\";import{Button}from\"baseui/button\";import{Input}from\"baseui/input\";import{styled}from\"baseui\";import axios from\"axios\";// Styled components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FormContainer=styled(\"div\",{width:\"400px\",margin:\"20px auto\",padding:\"20px\",borderRadius:\"10px\",boxShadow:\"0 4px 8px rgba(0,0,0,0.2)\",backgroundColor:\"#ffffff\",fontFamily:\"Arial, sans-serif\",display:\"flex\",flexDirection:\"column\",gap:\"12px\"});const MessageBox=styled(\"div\",props=>({width:\"400px\",margin:\"10px auto\",padding:\"10px\",borderRadius:\"8px\",textAlign:\"center\",color:\"#fff\",backgroundColor:props.$success?\"green\":\"red\"}));export default function UpdateWeather(_ref){let{city,temperature,humidity,windspeed,onUpdateSuccess}=_ref;const[newTemperature,setNewTemperature]=useState(temperature);const[newHumidity,setNewHumidity]=useState(humidity);const[newWindspeed,setNewWindspeed]=useState(windspeed);const[message,setMessage]=useState(null);const[success,setSuccess]=useState(false);const[loading,setLoading]=useState(false);const handleUpdate=async()=>{if(!window.confirm(`Are you sure you want to update weather info for ${city}?`)){return;}setLoading(true);setMessage(null);const requestBody={city,temperature:Number(newTemperature),humidity:Number(newHumidity),windspeed:Number(newWindspeed)};try{const response=await axios.put(`${endpoints.weather_service}${city}`,requestBody,{headers:{\"Content-Type\":\"application/json\"}});if(response.data.status===1){setSuccess(true);setMessage(`✅ Weather data for ${city} updated successfully!`);onUpdateSuccess(response.data.updated_weather);// Update UI\n}else{setSuccess(false);setMessage(\"❌ Failed to update the weather data.\");}}catch(error){console.error(\"❌ API Error:\",error);setSuccess(false);setMessage(\"❌ Failed to update the weather data.\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[message&&/*#__PURE__*/_jsx(MessageBox,{$success:success,children:message}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Temperature (\\xB0C)\",value:newTemperature,onChange:e=>setNewTemperature(e.target.value)}),/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Humidity (%)\",value:newHumidity,onChange:e=>setNewHumidity(e.target.value)}),/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Wind Speed (km/h)\",value:newWindspeed,onChange:e=>setNewWindspeed(e.target.value)}),/*#__PURE__*/_jsx(Button,{onClick:handleUpdate,disabled:loading,children:loading?\"Updating...\":\"Update Weather Info\"})]})]});}","map":{"version":3,"names":["React","useState","Button","Input","styled","axios","jsx","_jsx","jsxs","_jsxs","FormContainer","width","margin","padding","borderRadius","boxShadow","backgroundColor","fontFamily","display","flexDirection","gap","MessageBox","props","textAlign","color","$success","UpdateWeather","_ref","city","temperature","humidity","windspeed","onUpdateSuccess","newTemperature","setNewTemperature","newHumidity","setNewHumidity","newWindspeed","setNewWindspeed","message","setMessage","success","setSuccess","loading","setLoading","handleUpdate","window","confirm","requestBody","Number","response","put","endpoints","weather_service","headers","data","status","updated_weather","error","console","children","type","placeholder","value","onChange","e","target","onClick","disabled"],"sources":["/tmp/Weather-App/weatherapp_project/weather_frontend/src/components/UpdateWeather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"baseui/button\";\nimport { Input } from \"baseui/input\";\nimport { styled } from \"baseui\";\nimport axios from \"axios\";\n\n// Styled components\nconst FormContainer = styled(\"div\", {\n  width: \"400px\",\n  margin: \"20px auto\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n  backgroundColor: \"#ffffff\",\n  fontFamily: \"Arial, sans-serif\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"12px\",\n});\n\nconst MessageBox = styled(\"div\", (props) => ({\n  width: \"400px\",\n  margin: \"10px auto\",\n  padding: \"10px\",\n  borderRadius: \"8px\",\n  textAlign: \"center\",\n  color: \"#fff\",\n  backgroundColor: props.$success ? \"green\" : \"red\",\n}));\n\nexport default function UpdateWeather({ city, temperature, humidity, windspeed, onUpdateSuccess }) {\n  const [newTemperature, setNewTemperature] = useState(temperature);\n  const [newHumidity, setNewHumidity] = useState(humidity);\n  const [newWindspeed, setNewWindspeed] = useState(windspeed);\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleUpdate = async () => {\n    if (!window.confirm(`Are you sure you want to update weather info for ${city}?`)) {\n      return;\n    }\n\n    setLoading(true);\n    setMessage(null);\n\n    const requestBody = {\n      city,\n      temperature: Number(newTemperature),\n      humidity: Number(newHumidity),\n      windspeed: Number(newWindspeed),\n    };\n\n    try {\n      const response = await axios.put(`${endpoints.weather_service}${city}`, requestBody, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n       \n      });\n\n      if (response.data.status === 1) {\n        setSuccess(true);\n        setMessage(`✅ Weather data for ${city} updated successfully!`);\n        onUpdateSuccess(response.data.updated_weather); // Update UI\n      } else {\n        setSuccess(false);\n        setMessage(\"❌ Failed to update the weather data.\");\n      }\n    } catch (error) {\n      console.error(\"❌ API Error:\", error);\n      setSuccess(false);\n      setMessage(\"❌ Failed to update the weather data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {message && <MessageBox $success={success}>{message}</MessageBox>}\n      <FormContainer>\n        <Input\n          type=\"number\"\n          placeholder=\"Temperature (°C)\"\n          value={newTemperature}\n          onChange={(e) => setNewTemperature(e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"Humidity (%)\"\n          value={newHumidity}\n          onChange={(e) => setNewHumidity(e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"Wind Speed (km/h)\"\n          value={newWindspeed}\n          onChange={(e) => setNewWindspeed(e.target.value)}\n        />\n        <Button onClick={handleUpdate} disabled={loading}>\n          {loading ? \"Updating...\" : \"Update Weather Info\"}\n        </Button>\n      </FormContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}