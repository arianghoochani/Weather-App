{"ast":null,"code":"var _jsxFileName = \"/tmp/Weather-App/weatherapp_project/weather_frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\nimport WeatherCard from \"../components/WeatherCard\";\nimport { Button } from \"baseui/button\";\nimport { styled } from \"baseui\";\n\n// Styled container for weather cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContainer = styled(\"div\", {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  // Ensures 3 cards per row\n  gap: \"16px\",\n  padding: \"20px\",\n  justifyContent: \"center\"\n});\n_c = WeatherContainer;\nexport default function HomePage() {\n  _s();\n  const [citiesWeather, setCitiesWeather] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const API_URL = \"http://116.203.184.212:5000/api/weather\";\n    axios.get(API_URL).then(response => {\n      if (response.data.status === \"1\" && response.data.weathers.length > 0) {\n        setCitiesWeather(response.data.weathers);\n      } else {\n        setCitiesWeather([]);\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"❌ API Error:\", error);\n      setError(\"Failed to fetch weather data\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Loading weather data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\",\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherContainer, {\n      children: citiesWeather.map((data, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n        ...data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"3Hvx/W8A1TakBIdeNwXWECTRIuQ=\");\n_c2 = HomePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"WeatherContainer\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","WeatherCard","Button","styled","jsxDEV","_jsxDEV","WeatherContainer","display","gridTemplateColumns","gap","padding","justifyContent","_c","HomePage","_s","citiesWeather","setCitiesWeather","loading","setLoading","error","setError","API_URL","get","then","response","data","status","weathers","length","catch","console","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","map","index","_c2","$RefreshReg$"],"sources":["/tmp/Weather-App/weatherapp_project/weather_frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\nimport WeatherCard from \"../components/WeatherCard\";\nimport { Button } from \"baseui/button\";\nimport { styled } from \"baseui\";\n\n// Styled container for weather cards\nconst WeatherContainer = styled(\"div\", {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\", // Ensures 3 cards per row\n  gap: \"16px\",\n  padding: \"20px\",\n  justifyContent: \"center\",\n});\n\nexport default function HomePage() {\n  const [citiesWeather, setCitiesWeather] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const API_URL = \"http://116.203.184.212:5000/api/weather\";\n    axios\n      .get(API_URL)\n      .then((response) => {\n        if (response.data.status === \"1\" && response.data.weathers.length > 0) {\n          setCitiesWeather(response.data.weathers);\n        } else {\n          setCitiesWeather([]);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"❌ API Error:\", error);\n        setError(\"Failed to fetch weather data\");\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p style={{ textAlign: \"center\" }}>Loading weather data...</p>;\n  if (error) return <p style={{ textAlign: \"center\", color: \"red\" }}>{error}</p>;\n\n  return (\n    <div>\n      <Navbar />\n      <WeatherContainer>\n        {citiesWeather.map((data, index) => (\n          <WeatherCard key={index} {...data} />\n        ))}\n      </WeatherContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}